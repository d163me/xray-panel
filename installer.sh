#!/bin/bash

set -e

REPO_URL="https://github.com/d163me/xray-panel.git"
APP_DIR="/opt/marzban-fork"
BACKEND_DIR="$APP_DIR/backend"
FRONTEND_DIR="$APP_DIR/frontend"
INSTANCE_DIR="$BACKEND_DIR/instance"
DB_FILE="$INSTANCE_DIR/db.sqlite"

echo "[0/8] –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pkill -f "python app_combined_server.py" || true
pkill -f "npm run dev" || true
sleep 2

echo "[1/8] –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
rm -rf "$APP_DIR"

echo "[2/8] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt update -y && apt upgrade -y
apt install -y git curl python3 python3-venv python3-pip nginx sqlite3

echo "[3/8] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18..."
curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
apt install -y nodejs

echo "[4/8] –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
git clone "$REPO_URL" "$APP_DIR"

echo "[5/8] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python-–±—ç–∫–µ–Ω–¥–∞..."
cd "$BACKEND_DIR"
python3 -m venv venv
source venv/bin/activate
pip install --no-cache-dir -r requirements.txt

echo "[6/8] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
mkdir -p "$INSTANCE_DIR"
touch "$DB_FILE"

cat <<EOF | python3
import os
from flask import Flask
from flask_sqlalchemy import SQLAlchemy
from flask_cors import CORS
from werkzeug.security import generate_password_hash

basedir = os.path.abspath(os.path.dirname(__file__))
instance_path = os.path.join(basedir, "backend", "instance")
db_path = os.path.join(instance_path, "db.sqlite")
os.makedirs(instance_path, exist_ok=True)

app = Flask(__name__)
app.config["SQLALCHEMY_DATABASE_URI"] = f"sqlite:///{db_path}"
app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = False
CORS(app)
db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password_hash = db.Column(db.String(128), nullable=False)
    role = db.Column(db.String(20), nullable=False, default="user")

with app.app_context():
    db.create_all()
    if not User.query.filter_by(username="admin").first():
        admin = User(username="admin", password_hash=generate_password_hash("123456"), role="admin")
        db.session.add(admin)
        db.session.commit()
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —Å–æ–∑–¥–∞–Ω —Å –ø–∞—Ä–æ–ª–µ–º '123456'")
    else:
        print("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
EOF

echo "[7/8] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend..."
cd "$FRONTEND_DIR"
npm install

echo "[8/8] –ó–∞–ø—É—Å–∫ backend –∏ frontend..."
cd "$BACKEND_DIR"
source venv/bin/activate
nohup python app_combined_server.py > backend.log 2>&1 &

cd "$FRONTEND_DIR"
nohup npm run dev > frontend.log 2>&1 &

echo ""
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏ –≤—Å—ë –∑–∞–ø—É—â–µ–Ω–æ!"
echo "üåê –ü–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://<IP_–∏–ª–∏_–¥–æ–º–µ–Ω>:5173"
echo "üîê –õ–æ–≥–∏–Ω: admin | –ü–∞—Ä–æ–ª—å: 123456"
