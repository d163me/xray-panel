#!/usr/bin/env bash

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–Ω–µ–ª–∏ Xray + –ø—Ä–æ–¥–∞–∫—à–Ω —Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ –æ–¥–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ
INSTALL_DIR=/opt/xray-proxy-panel

# 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
if [ -d "$INSTALL_DIR" ]; then
  echo "üîÑ –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é..."
  pkill -f backend.py || true
  rm -rf "$INSTALL_DIR"
fi

# 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
apt update && apt install -y python3 python3-venv git curl nodejs npm

# 3. –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
mkdir -p "$INSTALL_DIR"
cd "$INSTALL_DIR"

# 4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º backend (Flask)
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é backend..."
python3 -m venv venv
source venv/bin/activate
pip install --no-cache-dir flask flask-cors

# –°–æ–∑–¥–∞—ë–º backend.py
cat > backend.py << 'EOF'
from flask import Flask, request, jsonify, send_from_directory
from flask_cors import CORS

app = Flask(__name__, static_folder='static', static_url_path='')
CORS(app)

@app.route('/api/create_proxy', methods=['POST'])
def create_proxy():
    name = request.json.get('name') or 'default'
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ Xray
    proxy_link = f"vmess://{name}@example.com:443"
    return jsonify({'proxy': proxy_link})

@app.route('/')
def index():
    return send_from_directory(app.static_folder, 'index.html')

@app.errorhandler(404)
def not_found(e):
    return send_from_directory(app.static_folder, 'index.html')

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=80)
EOF

# 5. –°–±–æ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ frontend (Vite + React)
echo "‚öõÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é frontend..."
npm create vite@latest frontend -- --template react --force
cd frontend
npm install axios

# –§–æ—Ä–º–∏—Ä—É–µ–º App.jsx
cat > src/App.jsx << 'EOF'
import { useState } from 'react'
import axios from 'axios'

function App() {
  const [name, setName] = useState('')
  const [proxy, setProxy] = useState('')

  const createProxy = async () => {
    try {
      const res = await axios.post('/api/create_proxy', { name })
      setProxy(res.data.proxy)
    } catch (e) {
      console.error(e)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏')
    }
  }

  return (
    <div style={{ padding: '2rem', fontFamily: 'sans-serif' }}>
      <h1>–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–∫—Å–∏</h1>
      <input
        type="text"
        placeholder="–ò–º—è –ø—Ä–æ–∫—Å–∏"
        value={name}
        onChange={(e) => setName(e.target.value)}
        style={{ marginRight: '0.5rem', padding: '0.5rem' }}
      />
      <button onClick={createProxy} style={{ padding: '0.5rem 1rem' }}>
        –°–æ–∑–¥–∞—Ç—å
      </button>
      {proxy && (
        <p style={{ marginTop: '1rem' }}>
          –ü—Ä–æ–∫—Å–∏: <a href={proxy}>{proxy}</a>
        </p>
      )}
    </div>
  )
}

export default App
EOF

# Vite config –æ—Å—Ç–∞—ë—Ç—Å—è –±–∞–∑–æ–≤—ã–º
cat > vite.config.js << 'EOF'
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

export default defineConfig({
  plugins: [react()],
  build: { outDir: 'dist' }
})
EOF

# –°—Ç—Ä–æ–∏–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
echo "üì¶ –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
npm run build

# –ö–æ–ø–∏—Ä—É–µ–º –≤ —Å—Ç–∞—Ç–∏–∫—É backend
echo "üìÇ –ö–æ–ø–∏—Ä—É—é —Å–±–æ—Ä–∫—É –≤–æ backend/static..."
mkdir -p ../static
cp -r dist/* ../static/

# 6. –ó–∞–ø—É—Å–∫ backend —Å —Ä–∞–∑–¥–∞—á–µ–π —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üêç –ó–∞–ø—É—Å–∫–∞—é Flask –Ω–∞ –ø–æ—Ä—Ç—É 80..."
cd ..
nohup bash -c "source venv/bin/activate && python3 backend.py" &> backend.log &

# 7. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray
echo "üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Xray..."
bash -c "$(curl -fsSL https://github.com/XTLS/Xray-install/raw/main/install-release.sh)"

clear
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –Ω–∞: http://$(curl -s ifconfig.me)"
